PROBLEM STATEMENT

Your local library needs your help! Given the expected and actual return dates for a library book, create a program that calculates the fine (if any). The fee
structure is as follows:
1. If the book is returned on or before the expected return date, no fine will be charged (i.e.: fine = 0).
2. If the book is returned after the expected return day but still within the same calendar month and year as the expected return date, fine = 15 Hackos (the number of days late).
3. If the book is returned after the expected return month but still within the same calendar year as the expected return date, the fine 500 Hackos (the number of months late).
4. If the book is returned after the calendar year in which it was expected, there is a fixed fine of 10000 Hackos

SOLUTION

def calculate_fine(actual_return_date, expected_return_date):
    actual_day, actual_month, actual_year = map(int, actual_return_date.split())
    expected_day, expected_month, expected_year = map(int, expected_return_date.split())

    if (actual_year < expected_year) or (actual_year == expected_year and actual_month < expected_month) or (actual_year == expected_year and actual_month == expected_month and actual_day <= expected_day):
        return 0

    if (actual_year == expected_year) and (actual_month == expected_month):
        days_late = actual_day - expected_day
        return 15 * days_late

    if actual_year == expected_year:
        months_late = actual_month - expected_month
        return 500 * months_late

    return 10000

if __name__ == "__main__":
    actual_return = input().strip()
    expected_return = input().strip()

    fine = calculate_fine(actual_return, expected_return)
    print(fine)
